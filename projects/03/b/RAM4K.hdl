// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address[9..11], a=dmout1, b=dmout2, c=dmout3, d=dmout4, e=dmout5, f=dmout6, g=dmout7, h=dmout8);

    And(a=dmout1, b=load, out=load1);
    And(a=dmout2, b=load, out=load2);
    And(a=dmout3, b=load, out=load3);
    And(a=dmout4, b=load, out=load4);
    And(a=dmout5, b=load, out=load5);
    And(a=dmout6, b=load, out=load6);
    And(a=dmout7, b=load, out=load7);
    And(a=dmout8, b=load, out=load8);

    RAM512(in=in, load=load1, address=address[0..8], out=ramout1);
    RAM512(in=in, load=load2, address=address[0..8], out=ramout2);
    RAM512(in=in, load=load3, address=address[0..8], out=ramout3);
    RAM512(in=in, load=load4, address=address[0..8], out=ramout4);
    RAM512(in=in, load=load5, address=address[0..8], out=ramout5);
    RAM512(in=in, load=load6, address=address[0..8], out=ramout6);
    RAM512(in=in, load=load7, address=address[0..8], out=ramout7);
    RAM512(in=in, load=load8, address=address[0..8], out=ramout8);

    Mux8Way16(a=ramout1, b=ramout2, c=ramout3, d=ramout4, e=ramout5, f=ramout6, g=ramout7, h=ramout8, sel=address[9..11], out=out);
}