// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address, a=dmout1, b=dmout2, c=dmout3, d=dmout4, e=dmout5, f=dmout6, g=dmout7, h=dmout8);

    And(a=dmout1, b=load, out=load1);
    And(a=dmout2, b=load, out=load2);
    And(a=dmout3, b=load, out=load3);
    And(a=dmout4, b=load, out=load4);
    And(a=dmout5, b=load, out=load5);
    And(a=dmout6, b=load, out=load6);
    And(a=dmout7, b=load, out=load7);
    And(a=dmout8, b=load, out=load8);

    Register(in=in, load=load1, out=regout1);
    Register(in=in, load=load2, out=regout2);
    Register(in=in, load=load3, out=regout3);
    Register(in=in, load=load4, out=regout4);
    Register(in=in, load=load5, out=regout5);
    Register(in=in, load=load6, out=regout6);
    Register(in=in, load=load7, out=regout7);
    Register(in=in, load=load8, out=regout8);

    Mux8Way16(a=regout1, b=regout2, c=regout3, d=regout4, e=regout5, f=regout6, g=regout7, h=regout8, sel=address, out=out);

}